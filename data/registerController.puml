@startuml registerController
mainframe **sd** Register Controller
hide footbox
actor User
participant "Browser" as Browser
participant ":RegisterController" as RegisterController
participant "GetParam" as GetParam
participant ":UserDAO" as UserDAO
participant "Helper" as Helper
participant "Database" as Database

User ->> Browser: Click on register link
activate Browser
Browser ->> RegisterController: **GET** /RegisterController
activate RegisterController
RegisterController -->> Browser: forward register.jsp
deactivate RegisterController



User ->> Browser: Submit register form
Browser ->> RegisterController: **POST** /RegisterController
activate RegisterController
RegisterController ->> GetParam: getStringParam(HttpServletRequest request, String field, String label, int min, int max, String defaultValue): String
activate GetParam
GetParam -->> RegisterController: Return username, password, comfirmPassword, fullName
RegisterController ->> GetParam: getEmailParams(HttpServletRequest request, String field, String label): String
GetParam -->> RegisterController: Return email
RegisterController ->> GetParam: getPhoneParams(HttpServletRequest request, String field, String label): String
GetParam -->> RegisterController: Return phone
deactivate GetParam
alt invalid data
    RegisterController -->> Browser: forward register.jsp

else valid data
    RegisterController ->> UserDAO: getOneUserByUsername(String username):User
    activate UserDAO
    UserDAO ->> Database: executeQuery(): ResultSet
    activate Database
    Database -->> UserDAO: Return result set
    deactivate Database
    UserDAO -->> RegisterController: Return User

    alt user does not exist
        RegisterController -->> Browser: forward register.jsp
        
    else user exists
        RegisterController ->> RegisterController: String.equals(String string): boolean

        alt not match
            RegisterController ->> Browser: forward register.jsp

        else match
            RegisterController ->> Helper: encrypt(String password, int hashingKey): String
            activate Helper
            Helper -->> RegisterController: Return hashingPassword
            deactivate Helper
            RegisterController ->> UserDAO: addUser(User user): boolean
            UserDAO ->> Database: executeUpdate(): int
            activate Database
            Database -->> UserDAO: Return result
            deactivate Database
            UserDAO -->> RegisterController: Return result
            deactivate UserDAO
            RegisterController -->> Browser: redirect /LoginController
            deactivate RegisterController
            deactivate Browser
        end        
    end
end

@enduml