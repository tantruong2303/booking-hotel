@startuml updateUser

hide footbox
mainframe <b>sd</b> Update User Account
actor User
participant "Browser" as Browser
participant ":CommonRoleFilter" as CommonRoleFilter
participant ":Helper" as Helper
participant ":UpdateUserController" as UpdateUserController
participant ":GetParam" as GetParam
participant ":UserDAO" as UserDao
participant "Database" as DB

User ->> Browser: Click on update user Link
activate Browser
Browser ->> CommonRoleFilter: GET /UpdateUserController
activate CommonRoleFilter
CommonRoleFilter ->> CommonRoleFilter: Context.lookup(String name): Object
CommonRoleFilter ->> Helper: protectedRouter(HttpServletRequest request, HttpServletResponse response, int minRole, int maxRole, String page): boolean
activate Helper
Helper ->> Helper: isLogin(HttpServletRequest request): boolean
Helper ->> Helper: correctRole(HttpServletRequest request, int minRole, int maxRole): boolean
alt return false 
    Helper -->> CommonRoleFilter: forward login.jsp
    CommonRoleFilter -->> Browser: forward login.jsp
else return true
    Helper -->> CommonRoleFilter: return true
    deactivate Helper
    CommonRoleFilter ->> UpdateUserController: doFilter(ServletRequest arg0, ServletResponse arg1): void
    activate UpdateUserController
    UpdateUserController ->> UpdateUserController: HttpSession.getAttribute(String name): Object
    alt null username
        UpdateUserController -->> CommonRoleFilter: forward error.jsp
        CommonRoleFilter -->> Browser: forward error.jsp
    else get username
        UpdateUserController ->> UserDao: getOneUserByUsername(String username): User
        activate UserDao
        UserDao ->> DB: executeQuery(): ResultSet
        activate DB
        DB -->> UserDao: return ResultSet
        deactivate DB
        UserDao -->> UpdateUserController: return User
        deactivate UserDao
        alt not exist username
            UpdateUserController -->> CommonRoleFilter: forward error.jsp
            CommonRoleFilter -->> Browser: forward error.jsp
        else exist username
            UpdateUserController ->> UpdateUserController: HttpSession.setAttribute(String arg0, Object arg1): void
            UpdateUserController -->> CommonRoleFilter: forward updateUserInfo.jsp
        deactivate UpdateUserController
            CommonRoleFilter -->> Browser: forward updateUserInfo.jsp
        deactivate CommonRoleFilter
    end
    end
end


User ->> Browser: Submit Update Form
Browser ->> CommonRoleFilter: POST /UpdateUserController
activate CommonRoleFilter
CommonRoleFilter ->> CommonRoleFilter: Context.lookup(String name): Object
CommonRoleFilter ->> Helper: protectedRouter(HttpServletRequest request, HttpServletResponse response, int minRole, int maxRole, String page): boolean
activate Helper
Helper ->> Helper: isLogin(HttpServletRequest request): boolean
Helper ->> Helper: correctRole(HttpServletRequest request, int minRole, int maxRole): boolean
alt return false 
    Helper -->> CommonRoleFilter: forward login.jsp
    CommonRoleFilter -->> Browser: forward login.jsp
else return true
    Helper -->> CommonRoleFilter: return true
    deactivate Helper
    CommonRoleFilter ->> UpdateUserController: doFilter(ServletRequest arg0, ServletResponse arg1): void
    activate UpdateUserController
    UpdateUserController ->> GetParam: getStringParam(HttpServletRequest request, String field, String label, int min, int max,String defaultValue):String
    activate GetParam
    GetParam --->> UpdateUserController: return fullName
    UpdateUserController ->> GetParam: getEmailParams(HttpServletRequest request, String field, String label): String
    GetParam --->> UpdateUserController: return email
    UpdateUserController ->> GetParam: getPhoneParams(HttpServletRequest request, String field, String label)
    GetParam --->> UpdateUserController: return phone
    deactivate GetParam
    alt invalid data
        UpdateUserController -->> CommonRoleFilter: forward updateUserInfo.jsp
        CommonRoleFilter -->> Browser: forward updateUserInfo.jsp
    else valid data
        UpdateUserController ->> UserDao: getOneUserByUsername(String username): User
        activate UserDao
        UserDao ->> DB: executeQuery()
        activate DB
        DB -->> UserDao: Return result set
        deactivate DB
        UserDao -->> UpdateUserController: User
        alt Not found user
            UpdateUserController -->> CommonRoleFilter: forward updateUserInfo.jsp
            CommonRoleFilter -->> Browser: forward updateUserInfo.jsp
        else
            UpdateUserController ->> UserDao: updateUserInfoByUsername(String username, String fullName, String email, String phone): boolean
            UserDao ->> DB: executeUpdate()
            activate DB
            DB -->> UserDao: Return int
            deactivate DB
            UserDao -->> UpdateUserController: return boolean
            deactivate UserDao
            alt update=false
                UpdateUserController -->> CommonRoleFilter: forward updateUserInfo.jsp
                CommonRoleFilter -->> Browser: forward updateUserInfo.jsp
            else  update=true
                UpdateUserController -->> CommonRoleFilter: Redirect /ViewUserController 
                deactivate UpdateUserController
                CommonRoleFilter -->> Browser: Redirect /ViewUserController 
                deactivate CommonRoleFilter
                deactivate Browser
            end
        end
    end
end
@enduml