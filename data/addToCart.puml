@startuml addToCart

hide footbox
mainframe <b>sd</b> Add To Cart For Customer
actor User
participant "Browser" as Browser
participant ":CustomerRoleFilter" as CustomerRoleFilter
participant ":AddToCartController" as AddToCartController
participant ":GetParam" as GetParam
participant ":Validator" as Validator
participant "Helper" as Helper
participant ":UserDAO" as UserDAO
participant ":RoomDAO" as RoomDAO
participant ":ReviewDAO" as ReviewDAO
participant ":BookingInfoDAO" as BookingInfoDAO
participant "Database" as DB


User ->> Browser: Click on Add To Cart button
activate Browser

Browser ->> CustomerRoleFilter: GET /AddToCartController
activate CustomerRoleFilter
CustomerRoleFilter ->> CustomerRoleFilter: Context.lookup(String name): Object
CustomerRoleFilter ->> Helper: protectedRouter(HttpServletRequest request, HttpServletResponse response, int minRole, int maxRole, String page): boolean
activate Helper
Helper ->> Helper: isLogin(HttpServletRequest request): boolean
Helper ->> Helper: correctRole(HttpServletRequest request, int minRole, int maxRole): boolean
alt return false 
    Helper -->> CustomerRoleFilter: forward login.jsp
    CustomerRoleFilter -->> Browser: forward login.jsp
else return true
    Helper -->> CustomerRoleFilter: return true
    deactivate Helper
    CustomerRoleFilter ->> AddToCartController: doFilter(ServletRequest arg0, ServletResponse arg1): void
    activate AddToCartController
    AddToCartController ->> GetParam: getIntParams(HttpServletRequest request, String field, String label, int min, int max, int defaultValue): Integer   
    activate GetParam
    GetParam -->> AddToCartController: return Integer roomId
    deactivate GetParam
    alt invalid data
        AddToCartController -->> CustomerRoleFilter: forward index.jsp    
        CustomerRoleFilter -->> Browser: forward index.jsp
    else valid data
        AddToCartController ->> RoomDAO: getRoomById(int roomId): Room
        activate RoomDAO
        RoomDAO ->> DB: executeQuery(): ResultSet
        activate DB
        DB -->> RoomDAO: return ResultSet rs
        deactivate DB
        RoomDAO -->> AddToCartController: return Room room
        deactivate RoomDAO
        alt invalid room
            AddToCartController -->> CustomerRoleFilter: forward index.jsp    
            CustomerRoleFilter -->> Browser: forward index.jsp
        else valid room
            AddToCartController ->> ReviewDAO: getReviewByRoomId(int roomId): ArrayList<Review>
            activate ReviewDAO
            ReviewDAO ->> DB: executeQuery(): ResultSet
            activate DB
            DB -->> ReviewDAO: return ResultSet rs
            deactivate DB
            ReviewDAO -->> AddToCartController: return ArrayList<Review> reviews
            deactivate ReviewDAO
            alt invalid reviews
                AddToCartController -->> CustomerRoleFilter: forward index.jsp    
                CustomerRoleFilter -->> Browser: forward index.jsp
            else valid reviews
                AddToCartController ->> AddToCartController: HttpServletRequest.setAttribute(String arg0, Object arg1): void
                AddToCartController -->> CustomerRoleFilter: forward addToCart.jsp    
                deactivate AddToCartController
                CustomerRoleFilter -->> Browser: forward addToCart.jsp
                deactivate CustomerRoleFilter
            end
        end
    end
end

User ->> Browser: Submit addToCart form
Browser ->> CustomerRoleFilter: POST /AddToCartController
activate CustomerRoleFilter
CustomerRoleFilter ->> CustomerRoleFilter: Context.lookup(String name): Object
CustomerRoleFilter ->> Helper: protectedRouter(HttpServletRequest request, HttpServletResponse response, int minRole, int maxRole, String page): boolean
activate Helper
Helper ->> Helper: isLogin(HttpServletRequest request): boolean
Helper ->> Helper: correctRole(HttpServletRequest request, int minRole, int maxRole): boolean
alt return false 
    Helper -->> CustomerRoleFilter: forward login.jsp
    CustomerRoleFilter -->> Browser: forward login.jsp
else return true
    Helper -->> CustomerRoleFilter: return true
    deactivate Helper
    CustomerRoleFilter ->> AddToCartController: doFilter(ServletRequest arg0, ServletResponse arg1): void
    activate AddToCartController
        AddToCartController ->> GetParam: getIntParams(HttpServletRequest request, String field, String label, int min, int max, int defaultValue): Integer
        activate GetParam
        GetParam -->> AddToCartController: return Integer roomId
        AddToCartController ->> GetParam: getDateFromNowToFuture(HttpServletRequest request, String field, String label): Date
        GetParam -->> AddToCartController: return Date startDate, endDate
        deactivate GetParam
    alt invalid data
        AddToCartController -->> CustomerRoleFilter: Browser: GET /AddToCartController
        CustomerRoleFilter -->> Browser: GET /AddToCartController    
    else valid data
        AddToCartController ->> Validator: computeNumberOfDay(HttpServletRequest request, Date startDate, Date endDate): Integer
        activate Validator
        Validator -->> AddToCartController: return Integer numberOfDay
        deactivate Validator
        alt invalid numberOfDay
            AddToCartController -->> CustomerRoleFilter: Browser: GET /AddToCartController
            CustomerRoleFilter -->> Browser: GET /AddToCartController 
        else valid numberOfDay
            AddToCartController ->> UserDAO: getOneUserByUsername(String username): User
            activate UserDAO
            UserDAO ->> DB: executeQuery(): ResultSet
            activate DB
            DB -->> UserDAO: return ResultSet rs
            deactivate DB
            UserDAO -->> AddToCartController: return User user
            deactivate UserDAO
            alt invalid user
                AddToCartController -->> CustomerRoleFilter: Browser: GET /AddToCartController
                CustomerRoleFilter -->> Browser: GET /AddToCartController 
            else valid user
                AddToCartController ->> RoomDAO: getRoomById(int roomId): Room
                activate RoomDAO
                RoomDAO ->> DB: executeQuery(): ResultSet
                activate DB
                DB -->> RoomDAO: return ResultSet rs
                deactivate DB
                RoomDAO -->> AddToCartController: return Room room
                alt invalid room
                    AddToCartController -->> CustomerRoleFilter: Browser: GET /AddToCartController
                    CustomerRoleFilter -->> Browser: GET /AddToCartController 
                else valid room
                    AddToCartController ->> BookingInfoDAO: getActiveBookingWithRoomId(Integer roomId): ArrayList<BookingInfo>
                    activate BookingInfoDAO
                    BookingInfoDAO ->> DB: executeQuery(): ResultSet
                    activate DB
                    DB -->> BookingInfoDAO: return ResultSet rs
                    deactivate DB
                    BookingInfoDAO -->> AddToCartController: return ArrayList<BookingInfo> bookings
                    deactivate BookingInfoDAO
                    alt invalid bookings
                        AddToCartController -->> CustomerRoleFilter: Browser: GET /AddToCartController
                        CustomerRoleFilter -->> Browser: GET /AddToCartController 
                    else valid bookings
                        AddToCartController ->> RoomDAO: changeStatus(Integer roomId, Integer status): boolean
                        RoomDAO ->> DB: executeUpdate(): prepareStatement 
                        activate DB
                        DB -->> RoomDAO: return int preStm.executeUpdate()
                        deactivate DB
                        RoomDAO -->> AddToCartController: return boolean isSuccess
                        deactivate RoomDAO
                        alt isSuccess = false
                            AddToCartController -->> CustomerRoleFilter: Browser: GET /AddToCartController
                            CustomerRoleFilter -->> Browser: GET /AddToCartController 
                        else isSuccess = true
                            AddToCartController ->> AddToCartController: HttpSession.getAttribute(String arg0): Object
                            AddToCartController ->> AddToCartController: HttpSession.setAttribute(String arg0, Object arg1): void
                            AddToCartController -->> CustomerRoleFilter: Browser: Redirect /IndexController
                            deactivate AddToCartController
                            CustomerRoleFilter -->> Browser: Redirect /IndexController
                            deactivate CustomerRoleFilter
                            deactivate Browser
                        end
                    end
                end
            end
        end
    end
end
@enduml